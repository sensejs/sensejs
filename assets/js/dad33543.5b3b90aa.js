"use strict";(self.webpackChunk_sensejs_sensejs_doc=self.webpackChunk_sensejs_sensejs_doc||[]).push([[312],{3288:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});var r=t(5250),s=t(9074);const o={id:"hello-world",sidebar_position:2},l="Examples",i={id:"introduction/hello-world",title:"Examples",description:"In this article, we will show you what a SenseJS application looks like with two simple examples.",source:"@site/docs/introduction/examples.md",sourceDirName:"introduction",slug:"/introduction/hello-world",permalink:"/docs/introduction/hello-world",draft:!1,unlisted:!1,editUrl:"https://github.com/sensejs/sensejs/edit/master/website/docs/introduction/examples.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"hello-world",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/introduction/installation"},next:{title:"Dependency Injection",permalink:"/docs/injection/"}},d={},a=[{value:"Set up",id:"set-up",level:2},{value:"Hello world",id:"hello-world",level:2},{value:"Dependency injection",id:"dependency-injection",level:2},{value:"RandomNumberModule",id:"randomnumbermodule",level:3},{value:"HttpModules",id:"httpmodules",level:3},{value:"Entrypoint",id:"entrypoint",level:3},{value:"Running",id:"running",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"In this article, we will show you what a SenseJS application looks like with two simple examples."}),"\n",(0,r.jsxs)(n.p,{children:["The code of the examples in this article can be found at ",(0,r.jsx)(n.a,{href:"https://github.com/sensejs/sensejs/tree/master/examples/",children:"examples"}),"\nfolder in the ",(0,r.jsx)(n.a,{href:"https://github.com/sensejs/sensejs",children:"SenseJS repository"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"set-up",children:"Set up"}),"\n",(0,r.jsx)(n.p,{children:"To run the example from the SenseJS repository, you need to install the dependencies first."}),"\n",(0,r.jsxs)(n.p,{children:["Note that the SenseJS repository uses ",(0,r.jsx)(n.a,{href:"https://pnpm.io/",children:"pnpm"})," as the package manager, so you should run the following"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pnpm i -r\n"})}),"\n",(0,r.jsx)(n.p,{children:"to install the dependencies."}),"\n",(0,r.jsx)(n.p,{children:"However, if you would like to write the code from scratch, you need to set up a Node.js project with the following\npackages installed."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"reflect-metadata"}),", ",(0,r.jsx)(n.code,{children:"@sensejs/http"}),", ",(0,r.jsx)(n.code,{children:"@sensejs/core"}),". These packages are required to run this example."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"typescript"}),". It should be the dev dependency of your project unless you have it installed globally."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Optionally include ",(0,r.jsx)(n.code,{children:"ts-node"})," in your dev dependencies, we'll use it to run the demo. you can also compile the source file\nmanually before running the app."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Also, you need to configure the ",(0,r.jsx)(n.code,{children:"tsconfig.json"}),", as instructed in ",(0,r.jsx)(n.a,{href:"/docs/introduction/installation",children:"the previous article"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"hello-world",children:"Hello world"}),"\n",(0,r.jsxs)(n.p,{children:["There is only a single file named ",(0,r.jsx)(n.code,{children:"main.ts"})," in this example, with the following content."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport {createKoaHttpModule, Controller, GET} from '@sensejs/http';\nimport {ApplicationRunner, ModuleClass, OnModuleCreate} from '@sensejs/core';\n\n@Controller('/')\nclass HelloWorldController {\n\n  @GET('/')\n  helloWorld() {\n    return 'hello world';\n  }\n\n}\n\n@ModuleClass({\n  requires: [\n    createKoaHttpModule({\n      components: [HelloWorldController],\n      httpOption: {\n        listenAddress: 'localhost',\n        listenPort: 8080,\n      }\n    })\n  ]\n})\nclass HelloWorldApp {\n\n  @OnModuleStart()\n  onModuleCreate() {\n    console.log('service started');\n  }\n}\n\nApplicationRunner.instance.start(HelloWorldApp);\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can run this simple http service via"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ts-node main.ts\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The above code create simple HTTP service that will listen at ",(0,r.jsx)(n.code,{children:"localhost:8080"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["After starting it, you shall be able to visit ",(0,r.jsx)(n.code,{children:"http://localhost:8080/"})," with an HTTP client, e.g. curl, to see the\noutput from this app."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ curl localhost:8080\nhello world\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Each time we send an HTTP request to ",(0,r.jsx)(n.code,{children:"http://localhost:8080/"}),", an instance of ",(0,r.jsx)(n.code,{children:"HelloWorldController"})," will be\ninstantiated and the method ",(0,r.jsx)(n.code,{children:"helloWorld"})," will be invoked, and the return value will be sent back to the HTTP client."]}),"\n",(0,r.jsx)(n.h2,{id:"dependency-injection",children:"Dependency injection"}),"\n",(0,r.jsx)(n.p,{children:"In this example, we will show you how dependency injection works."}),"\n",(0,r.jsxs)(n.p,{children:["The code of this example can be found at ",(0,r.jsx)(n.a,{href:"https://github.com/sensejs/sensejs/tree/master/examples/injection",children:"./examples/injection"})]}),"\n",(0,r.jsx)(n.p,{children:"In this example, we separate the code into three parts."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"random-number.ts"}),": contains a simple component ",(0,r.jsx)(n.code,{children:"RandomNumberGenerator"})," and a controller ",(0,r.jsx)(n.code,{children:"RandomNumberController"})," for querying or mutating the state\nof ",(0,r.jsx)(n.code,{children:"RandomNumberGenerator"}),", and exporting it as a module ",(0,r.jsx)(n.code,{children:"RandomNumberModule"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"http.module.ts"}),": containing the code for setting up an HTTP server, including all middleware"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"index.ts"}),": the entry point of the application, which imports ",(0,r.jsx)(n.code,{children:"RandomNumberModule"})," and ",(0,r.jsx)(n.code,{children:"HttpModule"})," and start the\napplication."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"randomnumbermodule",children:"RandomNumberModule"}),"\n",(0,r.jsxs)(n.p,{children:["In this section we focused on file ",(0,r.jsx)(n.code,{children:"random-number.module.ts"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"@Component()\n@Scope(Scope.SINGLETON)\nclass RandomNumberGenerator {\n\n  private state: number = Date.now() >>> 0; // Truncate the value of Date.now() into a 32-bit integer\n\n  reseed(seed: number) {\n    this.state = seed >>>= 0;\n    return this.state;\n  }\n\n  query() {\n    return this.state;\n  }\n\n  next() {\n    this.state = (this.state * 64829 + 0x5555) >>> 0;\n    return this.state;\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As you see, the class ",(0,r.jsx)(n.code,{children:"RandomNumberGenerator"})," is decorated with ",(0,r.jsx)(n.code,{children:"@Component()"}),", which makes it an injectable component."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"\n@Controller('/')\nclass RandomNumberController {\n\n  constructor(@Inject(RandomNumberGenerator) private generator: RandomNumberGenerator,\n              @InjectLogger() private logger: Logger) {}\n\n  @GET('state')\n  async get() {\n    const state = this.generator.query();\n    return {state};\n  }\n\n  @POST('next')\n  async nextRandom() {\n    const value = this.generator.next();\n    this.logger.info('Generated random number: ', value);\n    return {value};\n  }\n\n  @POST('reseed')\n  async reseed(@Body() body: any) {\n    const seed = Number(body?.seed);\n    if (!Number.isInteger(seed)) {\n      this.logger.warn('Invalid seed %s, ignored', seed);\n    } else {\n      this.generator.reseed(seed);\n    }\n    return {state: this.generator.query()};\n  }\n}\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The above class provides an HTTP controller to query or mutate the state of ",(0,r.jsx)(n.code,{children:"RandomNumberGenerator"}),", its constructor\nhas two parameters."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["the first one requires an instance of ",(0,r.jsx)(n.code,{children:"RandomNumberGenerator"}),", which is defined previously,"]}),"\n",(0,r.jsxs)(n.li,{children:["and the second one requires an instance of ",(0,r.jsx)(n.code,{children:"Logger"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"They will be instantiated and injected automatically when the controller is instantiated by the framework."}),"\n",(0,r.jsxs)(n.p,{children:["When handling requests, the framework will instantiate an instance of ",(0,r.jsx)(n.code,{children:"RandomNumberController"}),", and invoke the\nappropriate method, and if the method needs parameters, the framework will inject them automatically based on the\ndecorator of each parameter."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, when handling request of ",(0,r.jsx)(n.code,{children:"POST /reseed"}),", the request body will be injected as the parameter to the\n",(0,r.jsx)(n.code,{children:"reseed"})," method."]}),"\n",(0,r.jsxs)(n.p,{children:["At the end of this file, ",(0,r.jsx)(n.code,{children:"RandomNumberGenerator"})," and ",(0,r.jsx)(n.code,{children:"RandomNumberController"})," are packaged into a module\n",(0,r.jsx)(n.code,{children:"RandomNumberModule"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"\nexport const RandomNumberModule = createModule({\n  components: [RandomNumberGenerator, RandomNumberController]\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"httpmodules",children:"HttpModules"}),"\n",(0,r.jsxs)(n.p,{children:["In this section, we focused on another file ",(0,r.jsx)(n.code,{children:"./src/http.module.ts"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"We'll explain the content of this file in reverse order."}),"\n",(0,r.jsxs)(n.p,{children:["At the end of this file, a module is created by ",(0,r.jsx)(n.code,{children:"createKoaHttpModule"}),", just like what we did in the hello world example,\nbut this time two middlewares are added."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export const HttpModule = createKoaHttpModule({\n  // We need to list RandomNumberModule here so that RandomNumberController can be discovered\n  requires: [SenseLogModule, RandomNumberModule],\n\n  // The order must not be changed, since REQUEST_ID is not defined before RequestIdMiddleware\n  middlewares: [\n    RequestIdMiddleware,\n    ContextualLoggingMiddleware\n  ],\n\n  httpOption: {\n    listenAddress: 'localhost',\n    listenPort: 8080,\n  },\n});\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"There are two middleware defined prior to the HTTP module."}),"\n",(0,r.jsxs)(n.p,{children:["The first one, ",(0,r.jsx)(n.code,{children:"RequestIdMiddleware"})," assigns a request-id to each request, and bound it to a symbol ",(0,r.jsx)(n.code,{children:"REQUEST_ID"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {randomUUID} from 'crypto';\n\nconst REQUEST_ID = Symbol('REQUEST_ID');\n\n@Middleware({\n  provides: [REQUEST_ID]\n})\nclass RequestIdMiddleware {\n\n  async intercept(next: (requestId: string) => Promise<void>) {\n    const requestId = randomUUID();\n    // The parameter passed to next() will be bound to REQUEST_ID\n    await next(requestId);\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The second one, ",(0,r.jsx)(n.code,{children:"ContextualLoggingMiddleware"})," injects the request-id bound in previous middleware and attaches it to a\nlogger builder, and in fact it overrides the LoggerBuilder in this request, so all logger created in this request will\nshare the same request-id, and their output can be grouped by the request-id easily. This is very useful when you want\nto distinguish the logs from different concurrent requests."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"\n@Middleware({\n  provides: [LoggerBuilder]\n})\nclass ContextualLoggingMiddleware {\n\n  constructor(\n    // It'll be injected with a value provided by the previous interceptor\n    @Inject(REQUEST_ID) private requestId: string,\n    // It'll be injected with the LoggerBuilder defined in the global\n    @InjectLogger() private logger: Logger\n  ) {}\n\n  async intercept(next: (lb: LoggerBuilder) => Promise<void>) {\n    this.logger.debug('Associate LoggerBuilder with requestId=%s', this.requestId);\n    const slb = defaultLoggerBuilder.setTraceId(this.requestId);\n    // The parameter passed to next() will be bound to LoggerBuilder\n    await next(slb);\n  }\n\n}\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"entrypoint",children:"Entrypoint"}),"\n",(0,r.jsxs)(n.p,{children:["In the entry file, we need to import ",(0,r.jsx)(n.code,{children:'"reflect-metadata"'})," at the first place. Then we just create a module and mark it\nas an entrypoint."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import 'reflect-metadata';\nimport {EntryPoint, ModuleClass} from '@sensejs/core';\nimport {HttpModule} from './http.js';\n\n@EntryPoint()\n@ModuleClass({\n  requires: [\n    HttpModule\n  ],\n})\nclass App {\n}\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"That's it."}),"\n",(0,r.jsx)(n.h3,{id:"running",children:"Running"}),"\n",(0,r.jsx)(n.p,{children:"You can run this app and send requests with curl, you'll see output like this"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'% curl http://localhost:8080/state\n{"state":4005820056}\n\n% curl http://localhost:8080/next -XPOST\n{"value":2405846925}\n\n% curl http://localhost:8080/next -XPOST\n{"value":1207935726}\n\n% curl http://localhost:8080/reseed -d \'seed=1111\'\n{"state":1111}\n\n% curl http://localhost:8080/reseed -d \'seed=invalid\'\n{"state":1111}\n\ncurl http://localhost:8080/next -XPOST\n{"value":72046864}\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"On the application log, you'll see something like"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"+ 16:51:05.494 ContextualLoggingMiddleware - | Associate LoggerBuilder with requestId=25c469ea-2c9f-4ade-9d1f-a2603e509402\n+ 16:51:09.609 ContextualLoggingMiddleware - | Associate LoggerBuilder with requestId=19ad7258-08b6-4fec-8d0b-042067fa5bf8\n+ 16:51:09.609 RandomNumberController 19ad7258-08b6-4fec-8d0b-042067fa5bf8 | Generated random number:  2405846925\n+ 16:51:11.922 ContextualLoggingMiddleware - | Associate LoggerBuilder with requestId=9b9c909b-ba79-48f2-8fa4-febd39dc781f\n+ 16:51:11.923 RandomNumberController 9b9c909b-ba79-48f2-8fa4-febd39dc781f | Generated random number:  1207935726\n+ 16:51:16.972 ContextualLoggingMiddleware - | Associate LoggerBuilder with requestId=fa3c6df8-ccca-48d4-85ba-88520ca98986\n+ 16:51:20.076 ContextualLoggingMiddleware - | Associate LoggerBuilder with requestId=7d840e09-f95d-48e2-b398-e60cf192e801\n+ 16:51:20.077 RandomNumberController 7d840e09-f95d-48e2-b398-e60cf192e801 | Invalid seed NaN, ignored\n+ 16:51:22.194 ContextualLoggingMiddleware - | Associate LoggerBuilder with requestId=67ce037b-5d64-4a16-a57d-fba78ceed8f8\n+ 16:51:22.194 RandomNumberController 67ce037b-5d64-4a16-a57d-fba78ceed8f8 | Generated random number:  72046864\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9074:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>l});var r=t(79);const s={},o=r.createContext(s);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);