"use strict";(self.webpackChunk_sensejs_sensejs_doc=self.webpackChunk_sensejs_sensejs_doc||[]).push([[172],{7629:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var o=t(5250),i=t(7766);const s={id:"defining-injectables",sidebar_position:1},c="Provide Injectables",r={id:"injection/defining-injectables",title:"Provide Injectables",description:"Components",source:"@site/docs/injection/provide-injectables.md",sourceDirName:"injection",slug:"/injection/defining-injectables",permalink:"/docs/injection/defining-injectables",draft:!1,unlisted:!1,editUrl:"https://github.com/sensejs/sensejs/edit/master/website/docs/injection/provide-injectables.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"defining-injectables",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Dependency Injection",permalink:"/docs/injection/"},next:{title:"Injection Scope",permalink:"/docs/injection/injection-scope"}},a={},d=[{value:"Components",id:"components",level:2},{value:"Provide Constant Injectables",id:"provide-constant-injectables",level:2},{value:"Provide Injectable through Factory",id:"provide-injectable-through-factory",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"provide-injectables",children:"Provide Injectables"}),"\n",(0,o.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(n.p,{children:["A component is a class decorated with ",(0,o.jsx)(n.code,{children:"@Component"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Component()\n@Scope(ComponentScope.SINGLETON)\nclass Timer {\n  startTime = Date.now()\n\n  getElapsed() {\n      return Date.now() - this.startTime;\n  }\n}\nconst MyModule = createModule({\n  components: [Timer]\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"provide-constant-injectables",children:"Provide Constant Injectables"}),"\n",(0,o.jsxs)(n.p,{children:["The following example archives almost the same goal by providing ",(0,o.jsx)(n.code,{children:"Timer"})," as a constant, except that the instance of\n",(0,o.jsx)(n.code,{children:"Timer"})," will be created immediately when the source file is loaded. Also, note that constant injectables are always\nin ",(0,o.jsx)(n.code,{children:"SINGLETON"})," scope."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const TimerModule = createModule({\n    constants: [{\n        provide: Timer,\n        value: new Timer()\n    }]\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"provide-injectable-through-factory",children:"Provide Injectable through Factory"}),"\n",(0,o.jsx)(n.p,{children:"When you need factory pattern, you can also provide injectables in this way:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"class TimerFactory extends ComponentFactory<Timer> {\n    build() {\n        return new Timer();\n    }\n}\n\n\nconst TimerModule = createModule({\n    factories: [{\n        provide: Timer,\n        scope: ComponentScope.SINGLETON,\n        factory: TimerFactory\n    }]\n});\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},7766:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var o=t(79);const i={},s=o.createContext(i);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);