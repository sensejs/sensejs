"use strict";(self.webpackChunksensejs_doc=self.webpackChunksensejs_doc||[]).push([[201],{9673:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var o=n(1725),l=n(8836),i=(n(9231),n(4852)),r=["components"],a={id:"hello-world",sidebar_position:2},s="Hello world",p={unversionedId:"overview/hello-world",id:"overview/hello-world",isDocsHomePage:!1,title:"Hello world",description:"Let us started with a boring hello world app to see how a SenseJS application looks like.",source:"@site/docs/overview/hello-world.md",sourceDirName:"overview",slug:"/overview/hello-world",permalink:"/docs/overview/hello-world",editUrl:"https://github.com/sensejs/sensejs/edit/master/website/docs/overview/hello-world.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"hello-world",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/overview/introduction"},next:{title:"Injection",permalink:"/docs/overview/injection"}},d=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Setup",id:"setup",children:[],level:2},{value:"Running",id:"running",children:[],level:2},{value:"What&#39;s next",id:"whats-next",children:[],level:2}],u={toc:d};function c(e){var t=e.components,n=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hello-world"},"Hello world"),(0,i.kt)("p",null,"Let us started with a boring hello world app to see how a SenseJS application looks like."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"You shall set up a Node.js workspace with the following package installed."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ts-node"),". we'll use it to run the demo. you can also install ",(0,i.kt)("inlineCode",{parentName:"p"},"typescript")," instead and compile the source file\nmanually before running.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"reflect-metadata"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@sensejs/http"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@sensejs/core"),". These package are required by this demo."))),(0,i.kt)("p",null,"You can also find the complete source code in ",(0,i.kt)("inlineCode",{parentName:"p"},"examples/hello-world")," of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/sensejs/sensejs"},"SenseJS repository"),"."),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,"Create a file named, say ",(0,i.kt)("inlineCode",{parentName:"p"},"main.ts"),", with the following content."),(0,i.kt)("p",null,"If you don't want to do it by hand, you can also"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import 'reflect-metadata';\nimport {createKoaHttpModule, Controller, GET} from '@sensejs/http';\nimport {ApplicationRunner, ModuleClass, OnModuleCreate} from '@sensejs/core';\n\n@Controller('/')\nclass HelloWorldController {\n\n  @GET('/')\n  helloWorld() {\n    return 'hello world';\n  }\n\n}\n\n@ModuleClass({\n  requires: [\n    createKoaHttpModule({\n      components: [HelloWorldController],\n      httpOption: {\n        listenAddress: 'localhost',\n        listenPort: 8080,\n      }\n    })\n  ]\n})\nclass HelloWorldApp {\n\n  @OnModuleStart()\n  onModuleCreate() {\n    console.log('service started');\n  }\n}\n\nApplicationRunner.instance.start(HelloWorldApp);\n")),(0,i.kt)("p",null,"The above code create a simple hello world http service that will listen at ",(0,i.kt)("inlineCode",{parentName:"p"},"localhost:8080"),"."),(0,i.kt)("p",null,"Each time we send http request to ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/"),", an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorldController")," will be instantiated\nand the method ",(0,i.kt)("inlineCode",{parentName:"p"},"helloWorld")," will be invoked."),(0,i.kt)("h2",{id:"running"},"Running"),(0,i.kt)("p",null,"Then you can run this simple http service via"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ts-node main.ts\n")),(0,i.kt)("p",null,"After starting it, you shall be able to visit ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/")," to see the greeting from this app."),(0,i.kt)("h2",{id:"whats-next"},"What's next"),(0,i.kt)("p",null,"Before going deeper into how to make an HTTP service, you may want to know more about the fundamental concepts\nof SenseJS."))}c.isMDXComponent=!0}}]);