"use strict";(self.webpackChunksensejs_doc=self.webpackChunksensejs_doc||[]).push([[295],{4852:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var o=t(9231);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return t?o.createElement(h,a(a({ref:n},p),{},{components:t})):o.createElement(h,a({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5328:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=t(6215),r=(t(9231),t(4852));const i={id:"injection",sidebar_position:3},a="Injection",l={unversionedId:"overview/injection",id:"overview/injection",title:"Injection",description:"SenseJS framework provides a decorator based inject solution, which shall looks like many other frameworks.",source:"@site/docs/overview/injection.md",sourceDirName:"overview",slug:"/overview/injection",permalink:"/docs/overview/injection",draft:!1,editUrl:"https://github.com/sensejs/sensejs/edit/master/website/docs/overview/injection.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"injection",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Hello world",permalink:"/docs/overview/hello-world"},next:{title:"Module",permalink:"/docs/overview/module"}},s={},c=[{value:"Declaring a new Component",id:"declaring-a-new-component",level:2},{value:"Using the <code>Timer</code> Component",id:"using-the-timer-component",level:2},{value:"Inject to the <code>HelloWorldController</code>",id:"inject-to-the-helloworldcontroller",level:3},{value:"Inject to Lifecycle hooks of module",id:"inject-to-lifecycle-hooks-of-module",level:3},{value:"Running",id:"running",level:3},{value:"More ways to define injectable",id:"more-ways-to-define-injectable",level:2},{value:"Constants",id:"constants",level:3},{value:"Factories",id:"factories",level:3}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"injection"},"Injection"),(0,r.kt)("p",null,"SenseJS framework provides a decorator based inject solution, which shall looks like many other frameworks."),(0,r.kt)("p",null,"Based on the demo in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/overview/hello-world"},"last article"),", we add a new component ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer")," to the app to show\nhow injection works."),(0,r.kt)("h2",{id:"declaring-a-new-component"},"Declaring a new Component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import {Component, ComponentScope} from '@sensejs/core';\n\n@Component({scope: ComponentScope.SINGLETON})\nclass Timer {\n\n  private timestamp = Date.now();\n\n  reset() {\n    this.timestamp = Date.now();\n  }\n\n  getDuration() {\n    return Date.now() - this.timestamp;\n  }\n}\n\n")),(0,r.kt)("p",null,"In addition to the ",(0,r.kt)("inlineCode",{parentName:"p"},"SINGLETON")," scope, a component can also be marked as",(0,r.kt)("inlineCode",{parentName:"p"},"REQUEST")," scope or ",(0,r.kt)("inlineCode",{parentName:"p"},"TRANSIENT")," scope (which is\nthe default). The differences between them are explained below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SINGLETON"),": Only instantiated once during the application lifetime."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REQUEST"),": Only instantiated once each time when the IoC Container is requested to instantiate it or its dependents."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRANSIENT"),":  Create instances each time for each param that needs such a component.")),(0,r.kt)("p",null,"To make ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer")," injectable, it's necessary to list it in ",(0,r.kt)("inlineCode",{parentName:"p"},"components")," of a module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const TimerModule = createModule({\n    components: [Timer]\n});\n")),(0,r.kt)("h2",{id:"using-the-timer-component"},"Using the ",(0,r.kt)("inlineCode",{parentName:"h2"},"Timer")," Component"),(0,r.kt)("p",null,"The instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer")," can be injected as a parameter to any class instantiated by SenseJS. It can also\nbe injected to the params of a class method when invoked by SenseJS."),(0,r.kt)("h3",{id:"inject-to-the-helloworldcontroller"},"Inject to the ",(0,r.kt)("inlineCode",{parentName:"h3"},"HelloWorldController")),(0,r.kt)("p",null,"We'll modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"HelloWorldController")," to log each time the ",(0,r.kt)("inlineCode",{parentName:"p"},"helloWorld")," method is invoked, and a new method ",(0,r.kt)("inlineCode",{parentName:"p"},"reset")," that\nwill reset the timer will be added."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"\n@Controller('/')\nclass HelloWorldController {\n\n  constructor(@Inject(Timer) private timer: Timer) {}\n\n  @GET('/')\n  helloWorld() {\n    console.log(`Received request at ${this.timer.getDuration()} milliseconds`);\n    return 'hello world';\n  }\n\n  @POST('/reset')\n  reset() {\n    this.timer.reset();\n  }\n}\n")),(0,r.kt)("h3",{id:"inject-to-lifecycle-hooks-of-module"},"Inject to Lifecycle hooks of module"),(0,r.kt)("p",null,"We can also log the duration when application is shutdown, by add a shutdown hook to ",(0,r.kt)("inlineCode",{parentName:"p"},"HelloWorldApp"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@ModuleClass({\n  requires: [\n    createKoaHttpModule({\n      requires: [TimerModule],\n      components: [\n        HelloWorldController,\n      ],\n      httpOption: {\n        listenAddress: 'localhost',\n        listenPort: 8080,\n      },\n    }),\n  ],\n})\nclass HelloWorldApp {\n  @OnModuleCreate()\n  onModuleCreate() {\n    console.log('service started');\n  }\n\n  @OnModuleDestroy()\n  onModuleDestroy(@Inject(Timer) timeMeasure: Timer) {\n    console.log(`service stopped at ${timeMeasure.getDuration()} milliseconds`);\n  }\n}\nApplicationRunner.instance.start(HelloWorldApp);\n")),(0,r.kt)("p",null,"Be noticed that ",(0,r.kt)("inlineCode",{parentName:"p"},"TimerModule")," is added to ",(0,r.kt)("inlineCode",{parentName:"p"},"requires")," property of param for creating the http module, without this the\ninjection is impossible."),(0,r.kt)("h3",{id:"running"},"Running"),(0,r.kt)("p",null,"You can run this app and send request to invoke ",(0,r.kt)("inlineCode",{parentName:"p"},"helloWorld")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"reset")," to verify the behaviour is expected."),(0,r.kt)("p",null,"You may see output like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"% ts-node src/index.ts\nservice started\nReceived request at 0 milliseconds\nReceived request at 4055 milliseconds\n")),(0,r.kt)("p",null,"Note that the line ",(0,r.kt)("inlineCode",{parentName:"p"},"Received request at 0 milliseconds")," indicates that the instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer")," is lazily created when\nthe first time it's required to be instantiated."),(0,r.kt)("h2",{id:"more-ways-to-define-injectable"},"More ways to define injectable"),(0,r.kt)("p",null,"In addition to adding decorated constructor to a module, you can also declare constants or value produced by a factory\nas injectable."),(0,r.kt)("h3",{id:"constants"},"Constants"),(0,r.kt)("p",null,"The following example archives almost the same goal by providing ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer")," as a constant, except that the ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer"),"\ninstance will be created immediately when the source file is loaded. Also note that constant injectables are always\nin ",(0,r.kt)("inlineCode",{parentName:"p"},"SINGLETON")," scope."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const TimerModule = createModule({\n    constants: [{\n        // This can also be a string or a symbol, but you need to change corresponding param to `Inject` decorator\n        provide: Timer,\n        value: new Timer()\n    }]\n});\n")),(0,r.kt)("h3",{id:"factories"},"Factories"),(0,r.kt)("p",null,"You can also define injectable through factories. The following example will archive same goal by providing ",(0,r.kt)("inlineCode",{parentName:"p"},"Timer"),"\ninstance through a factory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"class TimerFactory extends ComponentFactory<Timer> {\n    build() {\n        return new Timer();\n    }\n}\n\n\nconst TimerModule = createModule({\n    factories: [{\n        provide: Timer,\n        scope: ComponentScope.SINGLETON,\n        factory: TimerFactory\n    }]\n});\n")))}d.isMDXComponent=!0}}]);